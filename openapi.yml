openapi: 3.0.0

info:
  description: Krak REST API
  version: 0.0.1
  title: Krak REST API

servers:
  - url: /api

paths:
  /boreholes:
    get:
      operationId: borehole.read_all
      summary: Read all boreholes in db, sorted by id
      description: Read all boreholes in db, sorted by id
      tags:
        - Borehole
      responses:
        "200":
          description: Successfully read boreholes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/borehole_output"
    post:
      operationId: borehole.create
      summary: Create a new borehole
      description: Create a new borehole
      tags:
        - Borehole
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/borehole_input"
        description: Borehole to create
        required: true
      responses:
        "201":
          description: Successfully created borehole
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/borehole_output"
  /boreholes/{borehole_id}:
    parameters:
      - name: borehole_id
        in: path
        description: Id of the borehole to get
        required: true
        schema:
          type: integer
    get:
      operationId: borehole.read_one
      summary: Read one borehole
      description: Read one borehole
      tags:
        - Borehole
      responses:
        "200":
          description: Successfully read borehole from borehole data operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/borehole_output"
    put:
      operationId: borehole.update
      tags:
        - Borehole
      summary: Update a borehole
      description: Update a borehole
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/borehole_input"
      responses:
        "200":
          description: Successfully updated borehole
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/borehole_output"
    delete:
      operationId: borehole.delete
      summary: Delete a borehole
      description: Delete a borehole
      tags:
        - Borehole
      responses:
        "200":
          description: Successfully deleted borehole
  /boreholes/{borehole_id}/core_photos:
    parameters:
      - name: borehole_id
        in: path
        description: Id of Borehole
        required: true
        schema:
          type: integer
    get:
      operationId: core_photo.read_all
      summary: Read all core photo ids in db, sorted by id
      description: Read all core photo ids in db, sorted by id
      tags:
        - CorePhotos

      responses:
        "200":
          description: Successfully read all core photos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/core_photo_output"
    post:
      operationId: core_photo.create
      summary: Create a new core photo
      description: Create a new core photo
      tags:
        - CorePhotos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/core_photo_input"
        description: Core photo to create
        required: true
      responses:
        "201":
          description: Successfully created core photo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/core_photo_output"

components:
  schemas:
    borehole_input:
      type: object
      required:
        - name
        - easting
        - northing
        - elevation
      properties:
        name:
          type: string
          description: Name of the borehole
        easting:
          type: number
          description: Easting position of the collar
        northing:
          type: number
          description: Northing position of the collar
        elevation:
          type: number
          description: Elevation position of the collar
    borehole_output:
      allOf:
        - $ref: '#components/schemas/borehole_input'
        - type: object
          properties:
            borehole_id:
              type: integer
              description: Id of the borehole
    core_photo_input:
      type: object
      properties:
        photo:
          type: string
          format: binary
          description: ''
        depth_from:
          type: number
        depth_to:
          type: number
        # crop_corners:
        #   type: array
        #   description: list of corner coordinates to crop the photo with
        #   minItems: 4
        #   maxItems: 4
        #   items:
        #     type: object
        #     description: 2d pixel coordinates (left, top)
        #     properties:
        #       left:
        #         type: number
        #       top:
        #         type: number
    core_photo_output:
      allOf:
        - $ref: '#components/schemas/core_photo_input'
        - type: object
          properties:
            core_photo_id:
              type: integer
              description: Id of the core photo
